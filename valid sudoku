public class Solution {
    public bool IsValidSudoku(char[,] board) {
        
        int row = board.GetLength(0);
        int col = board.GetLength(1);
        
        //Check row constraints
        List<char> visited = new List<char>();
        for(int i = 0; i< row; i++)
        {
            visited.Clear();
            if(HasDuplicates(visited,board,i,i+1,0,col))
                return false;
        }
        
        //Check for column
        
        for(int j = 0 ; j < col;j++)
        {
            visited.Clear();
            if(HasDuplicates(visited,board,0,row,j,j+1))
                return false;
        }
        
        //check for region
        int region = 3;
        
        for(int i = 0; i< 3; i++)
        {
           
            for(int j = 0; j <3 ;j++)
             {
                 visited.Clear();
                 if(HasDuplicates(visited,board,region*i,(i+1)*region, region*j, (j+1)*region))
                    return false;
             }
        }
     
     return true;
    }
    
    
    public bool HasDuplicates(List<char> visited,char[,] board, int startrow, int endrow, int startcol, int endcol)
    {
        
        for(int i = startrow;i < endrow;i++)
         for(int j = startcol; j< endcol;j++)
         {
             if(board[i,j] !='.' && visited.Contains(board[i,j]))
                return true;
                
            visited.Add(board[i,j]);
         }
         
         return false;
        
        
    }
}
