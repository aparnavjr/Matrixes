public class Solution {
    public int NumIslands(char[,] grid) {
        
        int row = grid.GetLength(0);
        int col = grid.GetLength(1);
        bool[,] visited = new bool[row,col];
        
        for(int i = 0;i<row;i++)
            for(int j =0;j<col;j++)
                visited[i,j] = false;
        
        int count = 0;
        
        if(grid.Length == 0)
            return 0;
            
        for(int i = 0; i < row ; i++)
            for(int j = 0; j< col; j++)
            {
                if(grid[i,j] == '1' && visited[i,j] == false)
                {
                    
                    dfs(grid,visited,i,j,row,col);
                    count++;
                }
            }
        
        return count;
    }
    
    public static void dfs(char[,] grid, bool[,] visited,int i ,int j,int row,int col)
    {
        
        
        int [] rowa = new int[] {-1,1,0,0};
        int [] cola = new int[] {0,0,-1,1};
        
        visited[i,j] = true;
        
        for(int k = 0; k < 4 ;k ++)
        {
            if(IsSafe(grid,visited,i+rowa[k],j+cola[k],row,col))
            {
                dfs(grid,visited,i+rowa[k],j+cola[k],row,col);
            }
        }
    }
    
    public static bool IsSafe(char[,] grid, bool[,] visited, int i,int j,int row,int col)
    {
        return (i >=0) && (i <row) && (j >=0) && (j <col) && (visited[i,j]== false && grid[i,j] =='1');
     
        
    }
    
}
